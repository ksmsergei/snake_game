name: Release Build

# Run on tag push
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-22.04 # Use this instead of ubuntu-latest for greater compatibility.
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake python3-pip gcc-11
          
          # Use gcc 11 because there is a ready SDL2 binary for it and we don't have to build the entire library
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
          
          # Run with sudo because we need root for `tools.system.package_manager:mode=install` later
          sudo pip3 install --ignore-installed conan

      - name: Configure and build
        run: |
          sudo conan profile detect
          sudo conan install . --build=missing -c tools.system.package_manager:mode=install
          cd build
          sudo cmake .. -DCMAKE_TOOLCHAIN_FILE=Release/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
          sudo cmake --build .

      - name: Archive Linux binary
        run: |
          tar -czvf snake-game-linux.tar.gz -C build snake

      - uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: snake-game-linux.tar.gz

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Conan
        run: pip install conan

      - name: Configure and build
        run: |
          conan profile detect
          conan install . --build=missing -c tools.system.package_manager:mode=install
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE="generators/conan_toolchain.cmake"
          cmake --build . --config Release

      - name: Archive Windows binary
        run: |
          Compress-Archive -Path build\Release\snake.exe -DestinationPath snake-game-windows.zip

      - uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: snake-game-windows.zip

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/linux-binary/snake-game-linux.tar.gz
            artifacts/windows-binary/snake-game-windows.zip
